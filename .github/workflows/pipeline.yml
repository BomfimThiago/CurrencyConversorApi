name: "Currency Conversor Api Quality Check"
on:
  pull_request:
    types:
      - synchronize
      - opened
    paths:
      - .
defaults:
  run:
    working-directory: .
jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    env:
      ENV: test
      CORS_ALLOW_ALL_ORIGINS: True
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      DJANGO_ALLOWED_HOSTS: "*,"
    strategy:
      matrix:
        python-version: ["3.11"]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            .src/core/config/requirements.txt
            .src/core/config/dev.txt
            .src/core/config/requirements/test.txt
      - run: make install-test-req
      - run: make coverage-test
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: .coverage.xml
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '80 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
        OPTIONAL: add Codecov
        - uses: codecov/codecov-action@v2
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            env_vars: OS,PYTHON
            fail_ci_if_error: true
            verbose: true
      
  lint:
    env:
      ENV: dev
      CORS_ALLOW_ALL_ORIGINS: True
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      DJANGO_ALLOWED_HOSTS: "*,"
    name: "Lint"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            .src/core/config/requirements.txt
            .src/core/config/dev.txt
            .src/core/config/requirements/test.txt
      - run: make install-test-req
      - run: make install-dev-req
      - uses: reviewdog/action-black@v2
        with:
          level: "error"
          reporter: "github-check"
          filter_mode: "added"
      - run: flake8 src
      - run: isort src --check-only